<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
     xmlns:creativeCommons="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:xapRights="http://ns.adobe.com/xap/1.0/rights/">
  <channel>
    <title>Git on @AlTobey Writes </title>
    <link>https://tobert.github.io/tags/git/index.xml</link>
    <language>en-us</language>
    <author>Albert P Tobey</author>
	<pubDate>2011-07-21 07:39:00 -0700 PDT</pubDate>
	<lastBuildDate>2011-07-21 07:39:00 -0700 PDT</lastBuildDate>
	<generator>Hugo</generator>
    
    <item>
      <title>New Experiment Language Choices</title>
      <link>https://tobert.github.io/post/2011-07-21-new-experiment-language-choices</link>
      <pubDate>Thu, 21 Jul 2011 07:39:00 PDT</pubDate>
      <author>Albert P Tobey</author>
      <guid>https://tobert.github.io/post/2011-07-21-new-experiment-language-choices</guid>
      <description>&lt;div class=&#34;css-full-post-content js-full-post-content&#34;&gt;
(edit: I&#39;m still tinkering with the ideas and have started learning Go, but will probably end up doing this project in either python or bash) &lt;br/&gt;&lt;br/&gt;My evolving side project is a configuration management suite that:&lt;pre&gt;1.) uses as much of git as possible and sensible&lt;br /&gt;2.) lightweight&lt;br /&gt;3.) simple things must be very fast turnaround to/from thought&lt;-&gt;production&lt;br /&gt;4.) all configs (and binaries if you like) versioned bit-for-bit for all time&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;I&#39;ll write more about the overall system design later; I&#39;ve written a bit of an intro and will post it when I have code to present (here&#39;s what I have in mind for fs permissions: &lt;a href=&#34;https://gist.github.com/1096381&#34;&gt;gist&lt;/a&gt;) I&#39;m implementing some tools now that I&#39;ve got the branching &amp; config strategy worked out. I could whip out a lot of it in Perl pretty handily, but I suspect it&#39;ll be a one-man show forever if I go that route. At work, almost everything is done in Ruby, which I still don&#39;t really like much. Plus two of the leading CFM tools are already in Ruby, so I feel like it&#39;s time for something different. So, here&#39;s what I&#39;m considering and why:&lt;pre&gt;1) Go&lt;br /&gt;  +) generates regular binaries, no VM to maintain on nodes&lt;br /&gt;  +) good C compatibility, already has libgit2 bindings&lt;br /&gt;  +) garbage collected, first-class strings&lt;br /&gt;  +) (yes, +) DNA from C, Erlang, Plan9, and Inferno/Limbo&lt;br /&gt;     e.g.) lightweight processes, channels, goroutines&lt;br /&gt;  -) I&#39;d have to learn from scratch&lt;br /&gt;  -) AFAIK nobody on my team knows/uses it (obscure)&lt;br /&gt;2) C&lt;br /&gt;  +) compiled, works literally everywhere, knows your mom intimately&lt;br /&gt;  +) good match with git, openssl/gnutls, and libgit2&lt;br /&gt;  +) igraph looks neat for smart path &amp; network&lt;br /&gt;  -) manual memory, thread, and process management :(&lt;br /&gt;  -) I&#39;m rusty as the Titanic&lt;br /&gt;3) Perl &gt;=5.8&lt;br /&gt;  +) installed everywhere&lt;br /&gt;  +) I&#39;m good/fast at it, prototype in a couple weeks&lt;br /&gt;  +) many git utilities are written in perl, good match&lt;br /&gt;  -) declining popularity, fractured community&lt;br /&gt;  -) modern libs require too much baggage (e.g. Moose)&lt;br /&gt;  -) XS is the devil, no usable libgit2 bindings&lt;br /&gt;4) Python&lt;br /&gt;  +) installed everywhere I care about&lt;br /&gt;  +) thriving community&lt;br /&gt;  +) I have some experience (though still much slower than perl)&lt;br /&gt;  +) libgit2 bindings exist&lt;br /&gt;  +) some of the git tools are already python&lt;br /&gt;  -) difficult to bundle with zero dependencies outside the git branch&lt;br /&gt;  -) v2.5 -&gt; v3.x transition is in progress, which to choose? (prob 2.7)&lt;br /&gt;5) Java&lt;br /&gt;  +) just kidding!&lt;br /&gt;6) Javascript/NodeJS&lt;br /&gt;  -) I&#39;m not kidding&lt;br /&gt;  +) garbage collected, closures, functional style available, naturally async&lt;br /&gt;  +) growing popularity, modules I&#39;d need are fairly mature (relative to node.js)&lt;br /&gt;  -) rapidly changing ecosystem/interfaces&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;To be honest, I&#39;m really leaning towards Go right now but it&#39;d add a month or so before I have something useful.&lt;br /&gt;&lt;br /&gt;Comments, suggestions? Don&#39;t hold back, you know I wouldn&#39;t ;)
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
