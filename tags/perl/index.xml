<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
     xmlns:creativeCommons="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:xapRights="http://ns.adobe.com/xap/1.0/rights/">
  <channel>
    <title>Perl on @AlTobey Writes </title>
    <link>https://tobert.github.io/tags/perl/index.xml</link>
    <language>en-us</language>
    <author>Albert P Tobey</author>
	<pubDate>2011-07-21 07:39:00 -0700 PDT</pubDate>
	<lastBuildDate>2011-07-21 07:39:00 -0700 PDT</lastBuildDate>
	<generator>Hugo</generator>
    
    <item>
      <title>New Experiment Language Choices</title>
      <link>https://tobert.github.io/post/2011-07-21-new-experiment-language-choices</link>
      <pubDate>Thu, 21 Jul 2011 07:39:00 PDT</pubDate>
      <author>Albert P Tobey</author>
      <guid>https://tobert.github.io/post/2011-07-21-new-experiment-language-choices</guid>
      <description>&lt;div class=&#34;css-full-post-content js-full-post-content&#34;&gt;
(edit: I&#39;m still tinkering with the ideas and have started learning Go, but will probably end up doing this project in either python or bash) &lt;br/&gt;&lt;br/&gt;My evolving side project is a configuration management suite that:&lt;pre&gt;1.) uses as much of git as possible and sensible&lt;br /&gt;2.) lightweight&lt;br /&gt;3.) simple things must be very fast turnaround to/from thought&lt;-&gt;production&lt;br /&gt;4.) all configs (and binaries if you like) versioned bit-for-bit for all time&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;I&#39;ll write more about the overall system design later; I&#39;ve written a bit of an intro and will post it when I have code to present (here&#39;s what I have in mind for fs permissions: &lt;a href=&#34;https://gist.github.com/1096381&#34;&gt;gist&lt;/a&gt;) I&#39;m implementing some tools now that I&#39;ve got the branching &amp; config strategy worked out. I could whip out a lot of it in Perl pretty handily, but I suspect it&#39;ll be a one-man show forever if I go that route. At work, almost everything is done in Ruby, which I still don&#39;t really like much. Plus two of the leading CFM tools are already in Ruby, so I feel like it&#39;s time for something different. So, here&#39;s what I&#39;m considering and why:&lt;pre&gt;1) Go&lt;br /&gt;  +) generates regular binaries, no VM to maintain on nodes&lt;br /&gt;  +) good C compatibility, already has libgit2 bindings&lt;br /&gt;  +) garbage collected, first-class strings&lt;br /&gt;  +) (yes, +) DNA from C, Erlang, Plan9, and Inferno/Limbo&lt;br /&gt;     e.g.) lightweight processes, channels, goroutines&lt;br /&gt;  -) I&#39;d have to learn from scratch&lt;br /&gt;  -) AFAIK nobody on my team knows/uses it (obscure)&lt;br /&gt;2) C&lt;br /&gt;  +) compiled, works literally everywhere, knows your mom intimately&lt;br /&gt;  +) good match with git, openssl/gnutls, and libgit2&lt;br /&gt;  +) igraph looks neat for smart path &amp; network&lt;br /&gt;  -) manual memory, thread, and process management :(&lt;br /&gt;  -) I&#39;m rusty as the Titanic&lt;br /&gt;3) Perl &gt;=5.8&lt;br /&gt;  +) installed everywhere&lt;br /&gt;  +) I&#39;m good/fast at it, prototype in a couple weeks&lt;br /&gt;  +) many git utilities are written in perl, good match&lt;br /&gt;  -) declining popularity, fractured community&lt;br /&gt;  -) modern libs require too much baggage (e.g. Moose)&lt;br /&gt;  -) XS is the devil, no usable libgit2 bindings&lt;br /&gt;4) Python&lt;br /&gt;  +) installed everywhere I care about&lt;br /&gt;  +) thriving community&lt;br /&gt;  +) I have some experience (though still much slower than perl)&lt;br /&gt;  +) libgit2 bindings exist&lt;br /&gt;  +) some of the git tools are already python&lt;br /&gt;  -) difficult to bundle with zero dependencies outside the git branch&lt;br /&gt;  -) v2.5 -&gt; v3.x transition is in progress, which to choose? (prob 2.7)&lt;br /&gt;5) Java&lt;br /&gt;  +) just kidding!&lt;br /&gt;6) Javascript/NodeJS&lt;br /&gt;  -) I&#39;m not kidding&lt;br /&gt;  +) garbage collected, closures, functional style available, naturally async&lt;br /&gt;  +) growing popularity, modules I&#39;d need are fairly mature (relative to node.js)&lt;br /&gt;  -) rapidly changing ecosystem/interfaces&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;To be honest, I&#39;m really leaning towards Go right now but it&#39;d add a month or so before I have something useful.&lt;br /&gt;&lt;br /&gt;Comments, suggestions? Don&#39;t hold back, you know I wouldn&#39;t ;)
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Moving sucks.</title>
      <link>https://tobert.github.io/post/2007-05-20-moving-sucks-can-i-have-amen</link>
      <pubDate>Tue, 02 Feb 2010 05:38:39 -0700</pubDate>
      <author>Albert P Tobey</author>
      <guid>https://tobert.github.io/post/2007-05-20-moving-sucks-can-i-have-amen</guid>
      <description>&lt;div class=&#34;css-full-post-content js-full-post-content&#34;&gt;
Well, I&#39;m all moved in to the apartment in San Diego.      Almost, that is.    My belongings are in the space, but as it goes, it&#39;s all still in boxes and it&#39;s a daunting task to go through and organize everything.   Most importantly, though, I&#39;m missing my wife and pets.   In both senses of &#34;missing.&#34;&lt;br /&gt;&lt;br /&gt;Life the last month has been interesting.    My Vehicross blew up.   I&#39;m in the process of figuring out what to do with it right now and will probably sell it.    It did provide me an excuse to buy a new motorcycle, so I got a brand-new &lt;a href=&#34;http://www.suzukicycles.com/Products/DL650K7/Default.aspx&#34;&gt;Suzuki V-Strom 650&lt;/a&gt;&lt;span style=&#34;text-decoration: underline;&#34;&gt; &lt;/span&gt;(a.k.a. the &#34;Wee-Strom&#34;).    I enjoyed riding my previous bike, a 1981 Kawasaki 440LTD, but this bike is an absolute dream as far as upgrades go!     So, it is really helping fight off the depression that comes with losing a beloved vehicle.&lt;br /&gt;&lt;br /&gt;My job is awesome and I&#39;m learning a ton about how to work on a massive scale and how the MMO game industry works.     Linux and Perl still shine as the best hammer any guy could have a toolbox full of.    I&#39;m blown away by how cool and accessible everybody is at work.    I&#39;m so used to the extremely conservative atmosphere, that I still have a hard time adjusting to the relaxed environment.&lt;br /&gt;&lt;br /&gt;I&#39;m spending some time reimplementing some tools similar to what I had at my old job because they really did make life better.    One is a nice wrapper around CGI::Application and some of its plugins (like Plugin::TT and Plugin::AutoRunmode) to make writing one-off apps very fast and efficient.    I looked at Catalyst &amp;amp; co. but they&#39;re just too darned much infrastructure for the kinds of apps I&#39;m writing.     I also couldn&#39;t get a handle on what the future is for Catalyst.   It looks like Maypole is pretty much rolled into Catalyst (I could be wrong, so don&#39;t quote me).    I didn&#39;t see anything else compelling out there as far as Perl goes.    Django looked good, but I still have a hard time reaching for Python.   It&#39;s not my usual language bigotry - it&#39;s common sense this time.    I&#39;m so busy already that taking time to learn another language isn&#39;t in the cards right now.     I know these things have 20-minute tutorials, but I also have to consider the fact that all the other sysadmins I know, know Perl.      Very few know Python or any other language for that matter.&lt;br /&gt;&lt;br /&gt;In other Perl-related news, I&#39;m looking for somebody to take over maintenance on Nagios::Object on CPAN.    I really enjoyed getting it out there, but it&#39;s tough keeping up with the updates to Nagios these days since I don&#39;t have any installations that I work on.      Just drop a mail to tobert@gmail.com and we&#39;ll talk about it.   There is a queue of updates that I need to get out but haven&#39;t had the time to get them all wrapped up and tested so I can make a release.   I guess I&#39;ll just have to throw it together and put it out there so people can beat on it...
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>i-wrote-couple-snmp-plugins-for-nagios</title>
      <link>https://tobert.github.io/post/2004-06-30-i-wrote-couple-snmp-plugins-for-nagios</link>
      <pubDate>Tue, 27 Feb 2007 02:13:37 -0700</pubDate>
      <author>Albert P Tobey</author>
      <guid>https://tobert.github.io/post/2004-06-30-i-wrote-couple-snmp-plugins-for-nagios</guid>
      <description>&lt;div class=&#34;css-full-post-content js-full-post-content&#34;&gt;
&lt;span class=&#34;boldunder&#34;&gt;&lt;/span&gt;I wrote a couple SNMP plugins for Nagios to check disk space and running processes. They are now in the contrib directory in the &lt;a href=&#34;http://nagiosplug.sourceforge.net/&#34;&gt;Nagios Plugins&lt;/a&gt; package.&lt;br /&gt;They both should work on Windows 2000 (and up) and Novell. HP-UX, unfortunately, does not ship with the Host-Resource MIB by default, so I&#39;m using the Net-SNMP daemon at work. It&#39;s a little flakey, but gets the job done. &lt;a href=&#34;http://www.snmpresearch.com/&#34;&gt;SNMP Research&lt;/a&gt; provides an extended SNMP daemon for HP-UX and other operating systems that includes the host resource MIB.&lt;br /&gt;&lt;br /&gt;I&#39;m also author and maintainer of the &lt;a href=&#34;http://search.cpan.org/%7Etobeya/Nagios-Object/&#34;&gt;Nagios::Object&lt;/a&gt; and &lt;a href=&#34;http://search.cpan.org/%7Etobeya/Nagios-Cmd/&#34;&gt;Nagios::Cmd&lt;/a&gt; modules on &lt;a href=&#34;http://search.cpan.org/&#34;&gt;CPAN&lt;/a&gt;.
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>64-bit perl on HP-UX (PARISC or Itanium)</title>
      <link>https://tobert.github.io/post/2005-10-13-64-bit-perl-on-hp-ux-parisc-or-itanium</link>
      <pubDate>Thu, 13 Oct 2005 02:30:00 PDT</pubDate>
      <author>Albert P Tobey</author>
      <guid>https://tobert.github.io/post/2005-10-13-64-bit-perl-on-hp-ux-parisc-or-itanium</guid>
      <description>&lt;div class=&#34;css-full-post-content js-full-post-content&#34;&gt;
Here&#39;s something that took me a few hours to get dialed in.    This is all set for linking DBD::Oracle and DBD::Sybase to their respective 64-bit client libraries without hassle.   I&#39;m assuming the HP ANSI C compiler is installed.   I never even tried with gcc due to some custom extensions that require the HP compiler.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;CC=/opt/ansic/bin/cc \&lt;br /&gt;CXX=/opt/aCC/bin/aCC \&lt;br /&gt;CFLAGS=&#34;+DD64 +Z -I/opt/perl-5.8/local/include&#34; \&lt;br /&gt;CXXFLAGS=$CFLAGS \&lt;br /&gt;LDFLAGS=&#34;-L/opt/perl-5.8/local/lib -L/usr/lib/hpux64&#34; \&lt;br /&gt;PATH=/opt/ansic/bin:/usr/ccs/bin:/opt/perl-5.8/local/bin:/opt/perl-5.8/bin:/usr/bin:/usr/local/bin:/bin:/sbin \&lt;br /&gt;PERL=/opt/perl-5.8/bin/perl \ &lt;br /&gt;MAKE=/usr/local/bin/gmake \&lt;br /&gt;./Configure -der \&lt;br /&gt;            -A prepend:libswanted=&#39;cl pthread &#39; \&lt;br /&gt;            -Dprefix=/opt/perl-5.8 \&lt;br /&gt;            -Dinstallprefix=/opt/perl-5.8 \&lt;br /&gt;            -Duselargefiles \&lt;br /&gt;            -Dusethreads \&lt;br /&gt;            -Duse64bitall \&lt;br /&gt;            -Dyacc=&#39;/usr/local/bin/bison -y&#39; \&lt;br /&gt;            -Uusemallocwrap \&lt;br /&gt;            -Dcf_by=&#34;Al Tobey&#34; \&lt;br /&gt;            -Dperladmin=&#39;tobert@gmail.com&#39; \&lt;br /&gt;            -Dcf_email=&#39;tobert@gmail.com&#39;&lt;br /&gt;&lt;br /&gt;make&lt;br /&gt;make test&lt;br /&gt;make install&lt;br /&gt;&lt;br /&gt;(cd /usr/include; /opt/perl-5.8/bin/h2ph -r -l .)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
